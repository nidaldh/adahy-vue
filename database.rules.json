{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        "customers": {
          "$customerId": {
            ".validate": "newData.hasChildren(['name', 'animals', 'totalAmount', 'createdAt'])",
            "name": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "phone": {
              ".validate": "newData.isString()"
            },
            "animals": {
              "$animalId": {
                ".validate": "newData.hasChildren(['type', 'number', 'weight', 'price'])",
                "type": {
                  ".validate": "newData.isString() && newData.val().length > 0"
                },
                "number": {
                  ".validate": "newData.isString() && newData.val().length > 0"
                },
                "weight": {
                  ".validate": "newData.isNumber() && newData.val() >= 0"
                },
                "price": {
                  ".validate": "newData.isNumber() && newData.val() >= 0"
                },
                "status": {
                  ".validate": "newData.isString() && newData.val().matches(/^(حي|جاهز|مذبوح|ملغي)$/)"
                }
              }
            },
            "totalAmount": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            },
            "totalPayments": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            },
            "balance": {
              ".validate": "newData.isNumber()"
            },
            "createdAt": {
              ".validate": "newData.isNumber()"
            },
            "updatedAt": {
              ".validate": "newData.isNumber()"
            }
          }
        },
        "payments": {
          "$paymentId": {
            ".validate": "newData.hasChildren(['customerId', 'amount', 'paymentDate', 'createdAt'])",
            "customerId": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "amount": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            "paymentDate": {
              ".validate": "newData.isNumber()"
            },
            "createdAt": {
              ".validate": "newData.isNumber()"
            },
            "notes": {
              ".validate": "newData.isString()"
            }
          }
        },
        "globalAnimals": {
          "$animalId": {
            ".validate": "newData.hasChildren(['type', 'number', 'compositeKey'])",
            "type": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "number": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "compositeKey": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "customerName": {
              ".validate": "newData.isString()"
            },
            "status": {
              ".validate": "newData.isString() && newData.val().matches(/^(حي|جاهز|مذبوح|ملغي)$/)"
            },
            "weight": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            },
            "price": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            }
          }
        },
        "metadata": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": "auth != null && auth.uid == $uid"
        }
      }
    },
    ".read": false,
    ".write": false
  }
}
